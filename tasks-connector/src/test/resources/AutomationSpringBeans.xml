<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>${GOOGLE_TASKS_CREDENTIALS}</value>
		</property>  
	</bean>
	
	<bean id="connectorOAuthState" class="org.mule.common.security.oauth.OAuthState">
		<property name="accessToken" value="${google.tasks.accessToken}" />
	</bean>
	
	<util:map id="commonValues" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
	    <entry key="taskList">
	    	<bean class="org.mule.module.google.task.model.TaskList">
	    		<property name="title" value="Task Title" />
	    	</bean>
    	</entry>
    	<entry key="task">
	    	<bean class="org.mule.module.google.task.model.Task">
	    		<property name="notes" value="Task notes" />
	    	</bean>
    	</entry>
	</util:map>
	
	<!-- insert task list -->
	<util:map id="insertTaskList" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	</util:map>

	<!-- get task list by id -->
	<util:map id="getTaskListById" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		For creating the list to get -->
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	</util:map>

	<!-- delete task -->
	<util:map id="deleteTask" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		For creating the list to delete -->
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="taskRef" value="#{commonValues.get('task')}" />
	</util:map>

	<util:map id="moveTask" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="firstTask">
	        <bean class="org.mule.module.google.task.model.Task">
	            <property name="title" value="First Task" />
	    		<property name="notes" value="This is the first task to be" />
	    	</bean>
	    </entry>
	    <entry key="secondTask">
	        <bean class="org.mule.module.google.task.model.Task">
	            <property name="title" value="Second Task" />
	    		<property name="notes" value="This is the second task to be" />
	    	</bean>
	    </entry>
	</util:map>
	
	<!-- delete task list -->
	<util:map id="deleteTaskList" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		For creating the list to delete -->
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	</util:map>

	<!-- insert task -->
	<util:map id="insertTask" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		For creating the list to insert the task in -->
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="taskRef" value="#{commonValues.get('task')}" />
	</util:map>
	
	<!-- get task by id -->
	<util:map id="getTaskById" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		For creating the list to insert the task in -->
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="taskRef" value="#{commonValues.get('task')}" />
	</util:map>

	<!-- get task lists -->
	<util:map id="getTaskLists" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		A list of TaskList objects to insert and get -->
		<entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="showHidden" value="false" />
	    <entry key="showcompleted" value="false" />
	</util:map>

	<!-- get tasks -->
	<util:map id="getTasks" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		A list of TaskList objects to insert and get -->
		<entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="taskRef" value="#{commonValues.get('task')}" />
	    <entry key="showHidden" value="false" />
	    <entry key="showcompleted" value="false" />
	</util:map>

	<!-- clear tasks -->
	<util:map id="clearTasks" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="taskRef" value="#{commonValues.get('task')}" />
	    <entry key="showcompleted" value="true" />
	    <entry key="showHidden" value="false" />
	</util:map>

	<!-- update task -->
	<util:map id="updateTask" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	    <entry key="taskRef" value="#{commonValues.get('task')}" />
	</util:map>

	<!-- update task list -->
	<util:map id="updateTaskList" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
	    <entry key="taskListRef" value="#{commonValues.get('taskList')}" />
	</util:map>
</beans>
